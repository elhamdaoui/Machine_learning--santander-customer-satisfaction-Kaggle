#! Python 3.7
"""
Open a file dialog window in tkinter using the filedialog method.
Tkinter has a prebuilt dialog window to access files. 
This example is designed to show how you might use a file dialog askopenfilename
and use it in a program.
"""

from tkinter import *
from tkinter import ttk
from tkinter.filedialog import askopenfilename, asksaveasfile

root = Tk()
root.geometry("500x100+300+300")
Title = root.title( "File Opener")
label = ttk.Label(root, text ="Choose a file from the menu File > Open",foreground="blue",font=("Helvetica", 12))
label.pack()

def execute_prediction(input_file_path,file_output_path):
    global label
    
    try:
        #TODO execute algo: use pandas_save to file_output_path
        print("Data form ", input_file_path, "result:", file_output_path)
        print("Do algo")
        return True
    except Exception as e:
        raise Exception("Error when predict: "+str(e))
    return False
    
def execute_algo_and_save(input_file_path):
    global label
    file_output = asksaveasfile(mode='w',
                       defaultextension=".csv",
                       filetypes = (("CSV File", "*.csv"),),
                       title = "Choose when will save the output")
    if file_output:
        execute_prediction(input_file_path,file_output.name)
    print("save To:"+file_output)
    label.config(foreground="blue", text="Result saved at: "+file_output.name+"\n You can open an other file tcpdump")
    

    
def OpenFile():
    global label
    label.config(foreground="blue")
    input_file_path = askopenfilename(initialdir=None,
                           filetypes =(("CSV File", "*.csv"),("All Files","*.*")),
                           title = "Choose a file generated by TcpDump."
                           )
    #print (file_path)
    #Using try in case user types in unknown file or closes without choosing a file.
    try:
        print(input_file_path, ": Use a function to execute your algo")
        label.config(text='Your file is in progress ...')
        execute_algo_and_save(input_file_path)
    except Exception as e:
        label.config(text='Error:'+ str(e), foreground="red")




#Menu Bar
menu = Menu(root)
root.config(menu=menu)

file = Menu(menu)

file.add_command(label = 'Open', command = OpenFile)
file.add_command(label = 'Exit', command = lambda:exit())

menu.add_cascade(label = 'File', menu = file)





root.mainloop()
